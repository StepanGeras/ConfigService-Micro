plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-config-server'
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.cloud:spring-cloud-starter-consul-discovery'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

def versionNumber = {
    ByteArrayOutputStream stdoutCommitNumber = new ByteArrayOutputStream()
    ByteArrayOutputStream stdoutCommitHash = new ByteArrayOutputStream()
    ByteArrayOutputStream stdoutBranchName = new ByteArrayOutputStream()

    exec {
        commandLine("git", "rev-list", "HEAD", "--count")
        standardOutput = stdoutCommitNumber
    }

    exec {
        commandLine("git", "rev-parse", "--short", "HEAD")
        standardOutput = stdoutCommitHash
    }

    exec {
        commandLine("git", "rev-parse", "--abbrev-ref", "HEAD")
        standardOutput = stdoutBranchName
    }

    String appVersion = stdoutCommitNumber.toString().trim() + "-" +
            stdoutCommitHash.toString().trim() + "-" +
            stdoutBranchName.toString().trim()
    return appVersion.toLowerCase()
}

allprojects {
    version = versionNumber()
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
